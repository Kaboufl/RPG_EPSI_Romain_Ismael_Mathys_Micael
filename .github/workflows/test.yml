# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Runs a single command using the runners shell
      - name: Running tests
        run: python test_game.py

      # If the test succeeds, we merge the change into the main branch
      - name: Fast forward main
        if: success()
        run: |
          git fetch origin
          git checkout -b main origin/main
          git merge dev --ff-only --allow-unrelated-histories
          git push origin main

      # If the test fails, we create a branch with the failing commits prefixed
      # by "failure/***", and revert the changes from the dev branch
      - name: Failed ! Revert changes
        if: failure()
        # run: |
        #   git reset dev HEAD^1
        #   git push
        run: |
          git checkout -b failure/$GITHUB_SHA
          git push origin failure/$GITHUB_SHA
          git checkout dev
          git reset --hard HEAD^1
          git push --force

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
